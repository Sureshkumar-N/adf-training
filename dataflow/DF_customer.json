{
	"name": "DF_customer",
	"properties": {
		"description": "load raw data into data-training-sqldb",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_customer_details_sqldb",
						"type": "DatasetReference"
					},
					"name": "CustomerDetails"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_prep_customer",
						"type": "DatasetReference"
					},
					"name": "sink1",
					"description": "Add sink dataset  "
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as string,",
				"          FirstName as string,",
				"          LastName as string,",
				"          Email as string,",
				"          PhoneNumber as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          ZipCode as string,",
				"          Country as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> CustomerDetails",
				"CustomerDetails alterRow(updateIf(contains([FirstName,LastName,Email,PhoneNumber,Address,City,State,ZipCode,Country],\"\"))) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}